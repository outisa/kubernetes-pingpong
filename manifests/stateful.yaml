apiVersion: v1
kind: Service
metadata:
  name: postgres-svc
  namespace: mainapp-namespace
  labels:
    app: postgres
spec:
  ports:
  - port: 5432
    name: postgres
  clusterIP: None
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: mainapp-namespace
  name: postgres-ss
spec:
  serviceName: postgres-svc
  replicas: 2
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: pingpong
        image: outisa/pingpong-application:f12090bf6dc7e371645c9b4dc4da644197ba17628
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: postgres-credentials
                key: POSTGRES_USER
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: postgres-credentials
                key: POSTGRES_DB
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-credentials
                key: POSTGRES_PASSWORD
      - name: postgres
        image: postgres:12
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: postgres-credentials
                key: POSTGRES_USER
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: postgres-credentials
                key: POSTGRES_DB
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-credentials
                key: POSTGRES_PASSWORD
        ports:
        - containerPort: 5432
          name: postgresdb
        volumeMounts:
        - name: pv-data
          mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: pv-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: local-path
      resources:
        requests:
          storage: 100Mi